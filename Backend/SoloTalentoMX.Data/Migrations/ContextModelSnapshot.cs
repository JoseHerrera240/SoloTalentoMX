// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoloTalentoMX.Data.Data;

#nullable disable

namespace SoloTalentoMX.Entity.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SoloTalentoMX.Data.Domain.Administradores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("SoloTalentoMX.Data.Domain.ArticuloTienda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArticulo")
                        .HasColumnType("int");

                    b.Property<int>("IdTienda")
                        .HasColumnType("int");

                    b.Property<int>("StockTienda")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientesId");

                    b.HasIndex("IdArticulo");

                    b.HasIndex("IdTienda");

                    b.ToTable("ArticuloTienda");
                });

            modelBuilder.Entity("SoloTalentoMX.Data.Domain.Articulos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("SoloTalentoMX.Data.Domain.ClienteArticulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CantidadCompra")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArticuloTienda")
                        .HasColumnType("int");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdArticuloTienda");

                    b.HasIndex("IdCliente");

                    b.ToTable("ClienteArticulo");
                });

            modelBuilder.Entity("SoloTalentoMX.Data.Domain.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("SoloTalentoMX.Data.Domain.Tiendas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sucursal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tiendas");
                });

            modelBuilder.Entity("SoloTalentoMX.Data.Domain.TipoUsuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoUsuarios");
                });

            modelBuilder.Entity("SoloTalentoMX.Data.Domain.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdAdministrador")
                        .HasColumnType("int");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdAdministrador");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdTipoUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("SoloTalentoMX.Data.Domain.ArticuloTienda", b =>
                {
                    b.HasOne("SoloTalentoMX.Data.Domain.Clientes", null)
                        .WithMany("ArticuloTiendas")
                        .HasForeignKey("ClientesId");

                    b.HasOne("SoloTalentoMX.Data.Domain.Articulos", "Articulos")
                        .WithMany("ArticuloTiendas")
                        .HasForeignKey("IdArticulo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoloTalentoMX.Data.Domain.Tiendas", "Tiendas")
                        .WithMany("ArticulosTienda")
                        .HasForeignKey("IdTienda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articulos");

                    b.Navigation("Tiendas");
                });

            modelBuilder.Entity("SoloTalentoMX.Data.Domain.ClienteArticulo", b =>
                {
                    b.HasOne("SoloTalentoMX.Data.Domain.ArticuloTienda", "ArticuloTienda")
                        .WithMany("ClienteArticulos")
                        .HasForeignKey("IdArticuloTienda")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoloTalentoMX.Data.Domain.Clientes", "Clientes")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArticuloTienda");

                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("SoloTalentoMX.Data.Domain.Usuarios", b =>
                {
                    b.HasOne("SoloTalentoMX.Data.Domain.Administradores", "Administradores")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdAdministrador");

                    b.HasOne("SoloTalentoMX.Data.Domain.Clientes", "Clientes")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdCliente");

                    b.HasOne("SoloTalentoMX.Data.Domain.TipoUsuarios", "TipoUsuarios")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdTipoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administradores");

                    b.Navigation("Clientes");

                    b.Navigation("TipoUsuarios");
                });

            modelBuilder.Entity("SoloTalentoMX.Data.Domain.Administradores", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SoloTalentoMX.Data.Domain.ArticuloTienda", b =>
                {
                    b.Navigation("ClienteArticulos");
                });

            modelBuilder.Entity("SoloTalentoMX.Data.Domain.Articulos", b =>
                {
                    b.Navigation("ArticuloTiendas");
                });

            modelBuilder.Entity("SoloTalentoMX.Data.Domain.Clientes", b =>
                {
                    b.Navigation("ArticuloTiendas");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SoloTalentoMX.Data.Domain.Tiendas", b =>
                {
                    b.Navigation("ArticulosTienda");
                });

            modelBuilder.Entity("SoloTalentoMX.Data.Domain.TipoUsuarios", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
